#Conexión a kafka
spring.kafka.template.default-topic= transaction-events
#spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=servicekafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.admin.properties.bootstrap.servers=servicekafka:9092
#spring.kafka.admin.properties.bootstrap.servers=localhost:9092
#CONEXION Postgresql
#spring.datasource.url=jdbc:postgresql://localhost:5432/db_account
spring.datasource.url=jdbc:postgresql://microservicio-postgres12:5432/db_account
#spring.datasource.url=jdbc:postgresql://192.168.0.3:5432/db_account
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
logging.level.org.hibernate.SQL=debug
#MODO ACADEMICO PARA q elimine y vuelva a crear -> EN PRODUCCIÒN se comentaria -> spring.jpa.hibernate.ddl-auto=create
#Comentar spring.jpa.hibernate.ddl-auto=create Al CREAR DockerFile
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.connection.charset
spring.jpa.hibernate.connection.characterEncoding
# CONEXION REDIS
#spring.redis.host=localhost
spring.redis.host=redis
spring.redis.port=6379
